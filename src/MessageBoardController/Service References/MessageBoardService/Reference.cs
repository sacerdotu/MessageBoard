//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessageBoardController.MessageBoardService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageBoardService.IMessageBoardService")]
    public interface IMessageBoardService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/InsertNewUser", ReplyAction="http://tempuri.org/IMessageBoardService/InsertNewUserResponse")]
        bool InsertNewUser(MessageBoardDTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/InsertNewUser", ReplyAction="http://tempuri.org/IMessageBoardService/InsertNewUserResponse")]
        System.Threading.Tasks.Task<bool> InsertNewUserAsync(MessageBoardDTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/CheckUserAndPassword", ReplyAction="http://tempuri.org/IMessageBoardService/CheckUserAndPasswordResponse")]
        MessageBoardDTO.UserDTO CheckUserAndPassword(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/CheckUserAndPassword", ReplyAction="http://tempuri.org/IMessageBoardService/CheckUserAndPasswordResponse")]
        System.Threading.Tasks.Task<MessageBoardDTO.UserDTO> CheckUserAndPasswordAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/FillUsersGrid", ReplyAction="http://tempuri.org/IMessageBoardService/FillUsersGridResponse")]
        System.Collections.Generic.List<MessageBoardDTO.UserDTO> FillUsersGrid();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/FillUsersGrid", ReplyAction="http://tempuri.org/IMessageBoardService/FillUsersGridResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MessageBoardDTO.UserDTO>> FillUsersGridAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/GetUserDetails", ReplyAction="http://tempuri.org/IMessageBoardService/GetUserDetailsResponse")]
        MessageBoardDTO.UserDTO GetUserDetails(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/GetUserDetails", ReplyAction="http://tempuri.org/IMessageBoardService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<MessageBoardDTO.UserDTO> GetUserDetailsAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/IsAdministrator", ReplyAction="http://tempuri.org/IMessageBoardService/IsAdministratorResponse")]
        bool IsAdministrator(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/IsAdministrator", ReplyAction="http://tempuri.org/IMessageBoardService/IsAdministratorResponse")]
        System.Threading.Tasks.Task<bool> IsAdministratorAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/ChangePassword", ReplyAction="http://tempuri.org/IMessageBoardService/ChangePasswordResponse")]
        bool ChangePassword(MessageBoardDTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/ChangePassword", ReplyAction="http://tempuri.org/IMessageBoardService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(MessageBoardDTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/UpdateIsActive", ReplyAction="http://tempuri.org/IMessageBoardService/UpdateIsActiveResponse")]
        bool UpdateIsActive(System.Collections.Generic.List<MessageBoardDTO.UserDTO> users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/UpdateIsActive", ReplyAction="http://tempuri.org/IMessageBoardService/UpdateIsActiveResponse")]
        System.Threading.Tasks.Task<bool> UpdateIsActiveAsync(System.Collections.Generic.List<MessageBoardDTO.UserDTO> users);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/AddNewPost", ReplyAction="http://tempuri.org/IMessageBoardService/AddNewPostResponse")]
        bool AddNewPost(MessageBoardDTO.PostDTO addPost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/AddNewPost", ReplyAction="http://tempuri.org/IMessageBoardService/AddNewPostResponse")]
        System.Threading.Tasks.Task<bool> AddNewPostAsync(MessageBoardDTO.PostDTO addPost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/FillPostsGrid", ReplyAction="http://tempuri.org/IMessageBoardService/FillPostsGridResponse")]
        System.Collections.Generic.List<MessageBoardDTO.PostDTO> FillPostsGrid();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/FillPostsGrid", ReplyAction="http://tempuri.org/IMessageBoardService/FillPostsGridResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MessageBoardDTO.PostDTO>> FillPostsGridAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/ChangeProfilePicture", ReplyAction="http://tempuri.org/IMessageBoardService/ChangeProfilePictureResponse")]
        bool ChangeProfilePicture(MessageBoardDTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/ChangeProfilePicture", ReplyAction="http://tempuri.org/IMessageBoardService/ChangeProfilePictureResponse")]
        System.Threading.Tasks.Task<bool> ChangeProfilePictureAsync(MessageBoardDTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/GetProfilePicture", ReplyAction="http://tempuri.org/IMessageBoardService/GetProfilePictureResponse")]
        MessageBoardDTO.UserDTO GetProfilePicture(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/GetProfilePicture", ReplyAction="http://tempuri.org/IMessageBoardService/GetProfilePictureResponse")]
        System.Threading.Tasks.Task<MessageBoardDTO.UserDTO> GetProfilePictureAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/GetCommentsForPostID", ReplyAction="http://tempuri.org/IMessageBoardService/GetCommentsForPostIDResponse")]
        System.Collections.Generic.List<MessageBoardDTO.CommentDTO> GetCommentsForPostID(int postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/GetCommentsForPostID", ReplyAction="http://tempuri.org/IMessageBoardService/GetCommentsForPostIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MessageBoardDTO.CommentDTO>> GetCommentsForPostIDAsync(int postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/AddComment", ReplyAction="http://tempuri.org/IMessageBoardService/AddCommentResponse")]
        bool AddComment(MessageBoardDTO.CommentDTO addNewComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/AddComment", ReplyAction="http://tempuri.org/IMessageBoardService/AddCommentResponse")]
        System.Threading.Tasks.Task<bool> AddCommentAsync(MessageBoardDTO.CommentDTO addNewComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/GetTranslations", ReplyAction="http://tempuri.org/IMessageBoardService/GetTranslationsResponse")]
        System.Collections.Generic.List<MessageBoardCommon.TranslationDTO> GetTranslations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageBoardService/GetTranslations", ReplyAction="http://tempuri.org/IMessageBoardService/GetTranslationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MessageBoardCommon.TranslationDTO>> GetTranslationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageBoardServiceChannel : MessageBoardController.MessageBoardService.IMessageBoardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageBoardServiceClient : System.ServiceModel.ClientBase<MessageBoardController.MessageBoardService.IMessageBoardService>, MessageBoardController.MessageBoardService.IMessageBoardService {
        
        public MessageBoardServiceClient() {
        }
        
        public MessageBoardServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageBoardServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageBoardServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageBoardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertNewUser(MessageBoardDTO.UserDTO user) {
            return base.Channel.InsertNewUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> InsertNewUserAsync(MessageBoardDTO.UserDTO user) {
            return base.Channel.InsertNewUserAsync(user);
        }
        
        public MessageBoardDTO.UserDTO CheckUserAndPassword(string username) {
            return base.Channel.CheckUserAndPassword(username);
        }
        
        public System.Threading.Tasks.Task<MessageBoardDTO.UserDTO> CheckUserAndPasswordAsync(string username) {
            return base.Channel.CheckUserAndPasswordAsync(username);
        }
        
        public System.Collections.Generic.List<MessageBoardDTO.UserDTO> FillUsersGrid() {
            return base.Channel.FillUsersGrid();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MessageBoardDTO.UserDTO>> FillUsersGridAsync() {
            return base.Channel.FillUsersGridAsync();
        }
        
        public MessageBoardDTO.UserDTO GetUserDetails(int userID) {
            return base.Channel.GetUserDetails(userID);
        }
        
        public System.Threading.Tasks.Task<MessageBoardDTO.UserDTO> GetUserDetailsAsync(int userID) {
            return base.Channel.GetUserDetailsAsync(userID);
        }
        
        public bool IsAdministrator(int userID) {
            return base.Channel.IsAdministrator(userID);
        }
        
        public System.Threading.Tasks.Task<bool> IsAdministratorAsync(int userID) {
            return base.Channel.IsAdministratorAsync(userID);
        }
        
        public bool ChangePassword(MessageBoardDTO.UserDTO user) {
            return base.Channel.ChangePassword(user);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(MessageBoardDTO.UserDTO user) {
            return base.Channel.ChangePasswordAsync(user);
        }
        
        public bool UpdateIsActive(System.Collections.Generic.List<MessageBoardDTO.UserDTO> users) {
            return base.Channel.UpdateIsActive(users);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateIsActiveAsync(System.Collections.Generic.List<MessageBoardDTO.UserDTO> users) {
            return base.Channel.UpdateIsActiveAsync(users);
        }
        
        public bool AddNewPost(MessageBoardDTO.PostDTO addPost) {
            return base.Channel.AddNewPost(addPost);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewPostAsync(MessageBoardDTO.PostDTO addPost) {
            return base.Channel.AddNewPostAsync(addPost);
        }
        
        public System.Collections.Generic.List<MessageBoardDTO.PostDTO> FillPostsGrid() {
            return base.Channel.FillPostsGrid();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MessageBoardDTO.PostDTO>> FillPostsGridAsync() {
            return base.Channel.FillPostsGridAsync();
        }
        
        public bool ChangeProfilePicture(MessageBoardDTO.UserDTO user) {
            return base.Channel.ChangeProfilePicture(user);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeProfilePictureAsync(MessageBoardDTO.UserDTO user) {
            return base.Channel.ChangeProfilePictureAsync(user);
        }
        
        public MessageBoardDTO.UserDTO GetProfilePicture(int userID) {
            return base.Channel.GetProfilePicture(userID);
        }
        
        public System.Threading.Tasks.Task<MessageBoardDTO.UserDTO> GetProfilePictureAsync(int userID) {
            return base.Channel.GetProfilePictureAsync(userID);
        }
        
        public System.Collections.Generic.List<MessageBoardDTO.CommentDTO> GetCommentsForPostID(int postID) {
            return base.Channel.GetCommentsForPostID(postID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MessageBoardDTO.CommentDTO>> GetCommentsForPostIDAsync(int postID) {
            return base.Channel.GetCommentsForPostIDAsync(postID);
        }
        
        public bool AddComment(MessageBoardDTO.CommentDTO addNewComment) {
            return base.Channel.AddComment(addNewComment);
        }
        
        public System.Threading.Tasks.Task<bool> AddCommentAsync(MessageBoardDTO.CommentDTO addNewComment) {
            return base.Channel.AddCommentAsync(addNewComment);
        }
        
        public System.Collections.Generic.List<MessageBoardCommon.TranslationDTO> GetTranslations() {
            return base.Channel.GetTranslations();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MessageBoardCommon.TranslationDTO>> GetTranslationsAsync() {
            return base.Channel.GetTranslationsAsync();
        }
    }
}
